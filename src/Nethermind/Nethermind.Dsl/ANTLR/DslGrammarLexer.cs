//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from DslGrammar.g4 by ANTLR 4.9.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.2")]
[System.CLSCompliant(false)]
public partial class DslGrammarLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		OPERATOR=1, ARITHMETIC_SYMBOL=2, SOURCE=3, WATCH=4, WHERE=5, PUBLISH=6, 
		WORD=7, DIGIT=8, ADDRESS=9, WS=10;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"OPERATOR", "ARITHMETIC_SYMBOL", "SOURCE", "WATCH", "WHERE", "PUBLISH", 
		"WORD", "DIGIT", "ADDRESS", "WS"
	};


	public DslGrammarLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public DslGrammarLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, null, null, "'SOURCE'", "'WATCH'", "'WHERE'", "'PUBLISH'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "OPERATOR", "ARITHMETIC_SYMBOL", "SOURCE", "WATCH", "WHERE", "PUBLISH", 
		"WORD", "DIGIT", "ADDRESS", "WS"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "DslGrammar.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return new string(_serializedATN); } }

	static DslGrammarLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static char[] _serializedATN = {
		'\x3', '\x608B', '\xA72A', '\x8133', '\xB9ED', '\x417C', '\x3BE7', '\x7786', 
		'\x5964', '\x2', '\f', '\\', '\b', '\x1', '\x4', '\x2', '\t', '\x2', '\x4', 
		'\x3', '\t', '\x3', '\x4', '\x4', '\t', '\x4', '\x4', '\x5', '\t', '\x5', 
		'\x4', '\x6', '\t', '\x6', '\x4', '\a', '\t', '\a', '\x4', '\b', '\t', 
		'\b', '\x4', '\t', '\t', '\t', '\x4', '\n', '\t', '\n', '\x4', '\v', '\t', 
		'\v', '\x3', '\x2', '\x3', '\x2', '\x3', '\x2', '\x5', '\x2', '\x1B', 
		'\n', '\x2', '\x3', '\x3', '\x3', '\x3', '\x3', '\x3', '\x3', '\x3', '\x3', 
		'\x3', '\x3', '\x3', '\x3', '\x3', '\x3', '\x3', '\x3', '\x3', '\x5', 
		'\x3', '&', '\n', '\x3', '\x3', '\x4', '\x3', '\x4', '\x3', '\x4', '\x3', 
		'\x4', '\x3', '\x4', '\x3', '\x4', '\x3', '\x4', '\x3', '\x5', '\x3', 
		'\x5', '\x3', '\x5', '\x3', '\x5', '\x3', '\x5', '\x3', '\x5', '\x3', 
		'\x6', '\x3', '\x6', '\x3', '\x6', '\x3', '\x6', '\x3', '\x6', '\x3', 
		'\x6', '\x3', '\a', '\x3', '\a', '\x3', '\a', '\x3', '\a', '\x3', '\a', 
		'\x3', '\a', '\x3', '\a', '\x3', '\a', '\x3', '\b', '\x6', '\b', '\x44', 
		'\n', '\b', '\r', '\b', '\xE', '\b', '\x45', '\x3', '\t', '\x6', '\t', 
		'I', '\n', '\t', '\r', '\t', '\xE', '\t', 'J', '\x3', '\n', '\x3', '\n', 
		'\x3', '\n', '\x3', '\n', '\a', '\n', 'Q', '\n', '\n', '\f', '\n', '\xE', 
		'\n', 'T', '\v', '\n', '\x3', '\v', '\x6', '\v', 'W', '\n', '\v', '\r', 
		'\v', '\xE', '\v', 'X', '\x3', '\v', '\x3', '\v', '\x2', '\x2', '\f', 
		'\x3', '\x3', '\x5', '\x4', '\a', '\x5', '\t', '\x6', '\v', '\a', '\r', 
		'\b', '\xF', '\t', '\x11', '\n', '\x13', '\v', '\x15', '\f', '\x3', '\x2', 
		'\a', '\x4', '\x2', '>', '>', '@', '@', '\x4', '\x2', '\x43', '\\', '\x63', 
		'|', '\x3', '\x2', '\x32', ';', '\x5', '\x2', '\x32', ';', '\x43', 'H', 
		'\x63', 'h', '\x5', '\x2', '\v', '\f', '\xF', '\xF', '\"', '\"', '\x2', 
		'\x65', '\x2', '\x3', '\x3', '\x2', '\x2', '\x2', '\x2', '\x5', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\a', '\x3', '\x2', '\x2', '\x2', '\x2', '\t', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\v', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\r', '\x3', '\x2', '\x2', '\x2', '\x2', '\xF', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\x11', '\x3', '\x2', '\x2', '\x2', '\x2', '\x13', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\x15', '\x3', '\x2', '\x2', '\x2', '\x3', '\x1A', 
		'\x3', '\x2', '\x2', '\x2', '\x5', '%', '\x3', '\x2', '\x2', '\x2', '\a', 
		'\'', '\x3', '\x2', '\x2', '\x2', '\t', '.', '\x3', '\x2', '\x2', '\x2', 
		'\v', '\x34', '\x3', '\x2', '\x2', '\x2', '\r', ':', '\x3', '\x2', '\x2', 
		'\x2', '\xF', '\x43', '\x3', '\x2', '\x2', '\x2', '\x11', 'H', '\x3', 
		'\x2', '\x2', '\x2', '\x13', 'L', '\x3', '\x2', '\x2', '\x2', '\x15', 
		'V', '\x3', '\x2', '\x2', '\x2', '\x17', '\x1B', '\x5', '\a', '\x4', '\x2', 
		'\x18', '\x1B', '\x5', '\t', '\x5', '\x2', '\x19', '\x1B', '\x5', '\r', 
		'\a', '\x2', '\x1A', '\x17', '\x3', '\x2', '\x2', '\x2', '\x1A', '\x18', 
		'\x3', '\x2', '\x2', '\x2', '\x1A', '\x19', '\x3', '\x2', '\x2', '\x2', 
		'\x1B', '\x4', '\x3', '\x2', '\x2', '\x2', '\x1C', '\x1D', '\a', '?', 
		'\x2', '\x2', '\x1D', '&', '\a', '?', '\x2', '\x2', '\x1E', '\x1F', '\a', 
		'#', '\x2', '\x2', '\x1F', '&', '\a', '?', '\x2', '\x2', ' ', '&', '\t', 
		'\x2', '\x2', '\x2', '!', '\"', '\a', '>', '\x2', '\x2', '\"', '&', '\a', 
		'?', '\x2', '\x2', '#', '$', '\a', '@', '\x2', '\x2', '$', '&', '\a', 
		'?', '\x2', '\x2', '%', '\x1C', '\x3', '\x2', '\x2', '\x2', '%', '\x1E', 
		'\x3', '\x2', '\x2', '\x2', '%', ' ', '\x3', '\x2', '\x2', '\x2', '%', 
		'!', '\x3', '\x2', '\x2', '\x2', '%', '#', '\x3', '\x2', '\x2', '\x2', 
		'&', '\x6', '\x3', '\x2', '\x2', '\x2', '\'', '(', '\a', 'U', '\x2', '\x2', 
		'(', ')', '\a', 'Q', '\x2', '\x2', ')', '*', '\a', 'W', '\x2', '\x2', 
		'*', '+', '\a', 'T', '\x2', '\x2', '+', ',', '\a', '\x45', '\x2', '\x2', 
		',', '-', '\a', 'G', '\x2', '\x2', '-', '\b', '\x3', '\x2', '\x2', '\x2', 
		'.', '/', '\a', 'Y', '\x2', '\x2', '/', '\x30', '\a', '\x43', '\x2', '\x2', 
		'\x30', '\x31', '\a', 'V', '\x2', '\x2', '\x31', '\x32', '\a', '\x45', 
		'\x2', '\x2', '\x32', '\x33', '\a', 'J', '\x2', '\x2', '\x33', '\n', '\x3', 
		'\x2', '\x2', '\x2', '\x34', '\x35', '\a', 'Y', '\x2', '\x2', '\x35', 
		'\x36', '\a', 'J', '\x2', '\x2', '\x36', '\x37', '\a', 'G', '\x2', '\x2', 
		'\x37', '\x38', '\a', 'T', '\x2', '\x2', '\x38', '\x39', '\a', 'G', '\x2', 
		'\x2', '\x39', '\f', '\x3', '\x2', '\x2', '\x2', ':', ';', '\a', 'R', 
		'\x2', '\x2', ';', '<', '\a', 'W', '\x2', '\x2', '<', '=', '\a', '\x44', 
		'\x2', '\x2', '=', '>', '\a', 'N', '\x2', '\x2', '>', '?', '\a', 'K', 
		'\x2', '\x2', '?', '@', '\a', 'U', '\x2', '\x2', '@', '\x41', '\a', 'J', 
		'\x2', '\x2', '\x41', '\xE', '\x3', '\x2', '\x2', '\x2', '\x42', '\x44', 
		'\t', '\x3', '\x2', '\x2', '\x43', '\x42', '\x3', '\x2', '\x2', '\x2', 
		'\x44', '\x45', '\x3', '\x2', '\x2', '\x2', '\x45', '\x43', '\x3', '\x2', 
		'\x2', '\x2', '\x45', '\x46', '\x3', '\x2', '\x2', '\x2', '\x46', '\x10', 
		'\x3', '\x2', '\x2', '\x2', 'G', 'I', '\t', '\x4', '\x2', '\x2', 'H', 
		'G', '\x3', '\x2', '\x2', '\x2', 'I', 'J', '\x3', '\x2', '\x2', '\x2', 
		'J', 'H', '\x3', '\x2', '\x2', '\x2', 'J', 'K', '\x3', '\x2', '\x2', '\x2', 
		'K', '\x12', '\x3', '\x2', '\x2', '\x2', 'L', 'M', '\a', '\x32', '\x2', 
		'\x2', 'M', 'N', '\a', 'z', '\x2', '\x2', 'N', 'R', '\x3', '\x2', '\x2', 
		'\x2', 'O', 'Q', '\t', '\x5', '\x2', '\x2', 'P', 'O', '\x3', '\x2', '\x2', 
		'\x2', 'Q', 'T', '\x3', '\x2', '\x2', '\x2', 'R', 'P', '\x3', '\x2', '\x2', 
		'\x2', 'R', 'S', '\x3', '\x2', '\x2', '\x2', 'S', '\x14', '\x3', '\x2', 
		'\x2', '\x2', 'T', 'R', '\x3', '\x2', '\x2', '\x2', 'U', 'W', '\t', '\x6', 
		'\x2', '\x2', 'V', 'U', '\x3', '\x2', '\x2', '\x2', 'W', 'X', '\x3', '\x2', 
		'\x2', '\x2', 'X', 'V', '\x3', '\x2', '\x2', '\x2', 'X', 'Y', '\x3', '\x2', 
		'\x2', '\x2', 'Y', 'Z', '\x3', '\x2', '\x2', '\x2', 'Z', '[', '\b', '\v', 
		'\x2', '\x2', '[', '\x16', '\x3', '\x2', '\x2', '\x2', '\t', '\x2', '\x1A', 
		'%', '\x45', 'J', 'R', 'X', '\x3', '\b', '\x2', '\x2',
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
