//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from DslGrammar.g4 by ANTLR 4.9.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.2")]
[System.CLSCompliant(false)]
public partial class DslGrammarLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		OPERATOR=1, BOOLEAN_OPERATOR=2, ARITHMETIC_SYMBOL=3, SOURCE=4, WATCH=5, 
		WHERE=6, PUBLISH=7, AND=8, OR=9, CONTAINS=10, WORD=11, DIGIT=12, ADDRESS=13, 
		WEBSOCKETS=14, LOG_PUBLISHER=15, WS=16;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"OPERATOR", "BOOLEAN_OPERATOR", "ARITHMETIC_SYMBOL", "SOURCE", "WATCH", 
		"WHERE", "PUBLISH", "AND", "OR", "CONTAINS", "WORD", "DIGIT", "ADDRESS", 
		"WEBSOCKETS", "LOG_PUBLISHER", "WS"
	};


	public DslGrammarLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public DslGrammarLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, null, null, null, "'SOURCE'", "'WATCH'", "'WHERE'", "'PUBLISH'", 
		"'AND'", "'OR'", "'CONTAINS'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "OPERATOR", "BOOLEAN_OPERATOR", "ARITHMETIC_SYMBOL", "SOURCE", "WATCH", 
		"WHERE", "PUBLISH", "AND", "OR", "CONTAINS", "WORD", "DIGIT", "ADDRESS", 
		"WEBSOCKETS", "LOG_PUBLISHER", "WS"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "DslGrammar.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return new string(_serializedATN); } }

	static DslGrammarLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static char[] _serializedATN = {
		'\x3', '\x608B', '\xA72A', '\x8133', '\xB9ED', '\x417C', '\x3BE7', '\x7786', 
		'\x5964', '\x2', '\x12', '\x95', '\b', '\x1', '\x4', '\x2', '\t', '\x2', 
		'\x4', '\x3', '\t', '\x3', '\x4', '\x4', '\t', '\x4', '\x4', '\x5', '\t', 
		'\x5', '\x4', '\x6', '\t', '\x6', '\x4', '\a', '\t', '\a', '\x4', '\b', 
		'\t', '\b', '\x4', '\t', '\t', '\t', '\x4', '\n', '\t', '\n', '\x4', '\v', 
		'\t', '\v', '\x4', '\f', '\t', '\f', '\x4', '\r', '\t', '\r', '\x4', '\xE', 
		'\t', '\xE', '\x4', '\xF', '\t', '\xF', '\x4', '\x10', '\t', '\x10', '\x4', 
		'\x11', '\t', '\x11', '\x3', '\x2', '\x3', '\x2', '\x3', '\x2', '\x3', 
		'\x2', '\x5', '\x2', '(', '\n', '\x2', '\x3', '\x3', '\x3', '\x3', '\x5', 
		'\x3', ',', '\n', '\x3', '\x3', '\x4', '\x3', '\x4', '\x3', '\x4', '\x3', 
		'\x4', '\x3', '\x4', '\x3', '\x4', '\x3', '\x4', '\x3', '\x4', '\x3', 
		'\x4', '\x5', '\x4', '\x37', '\n', '\x4', '\x3', '\x5', '\x3', '\x5', 
		'\x3', '\x5', '\x3', '\x5', '\x3', '\x5', '\x3', '\x5', '\x3', '\x5', 
		'\x3', '\x6', '\x3', '\x6', '\x3', '\x6', '\x3', '\x6', '\x3', '\x6', 
		'\x3', '\x6', '\x3', '\a', '\x3', '\a', '\x3', '\a', '\x3', '\a', '\x3', 
		'\a', '\x3', '\a', '\x3', '\b', '\x3', '\b', '\x3', '\b', '\x3', '\b', 
		'\x3', '\b', '\x3', '\b', '\x3', '\b', '\x3', '\b', '\x3', '\t', '\x3', 
		'\t', '\x3', '\t', '\x3', '\t', '\x3', '\n', '\x3', '\n', '\x3', '\n', 
		'\x3', '\v', '\x3', '\v', '\x3', '\v', '\x3', '\v', '\x3', '\v', '\x3', 
		'\v', '\x3', '\v', '\x3', '\v', '\x3', '\v', '\x3', '\f', '\x6', '\f', 
		'\x65', '\n', '\f', '\r', '\f', '\xE', '\f', '\x66', '\x3', '\r', '\x6', 
		'\r', 'j', '\n', '\r', '\r', '\r', '\xE', '\r', 'k', '\x3', '\xE', '\x3', 
		'\xE', '\x3', '\xE', '\x3', '\xE', '\a', '\xE', 'r', '\n', '\xE', '\f', 
		'\xE', '\xE', '\xE', 'u', '\v', '\xE', '\x3', '\xF', '\x3', '\xF', '\x3', 
		'\xF', '\x3', '\xF', '\x3', '\xF', '\x3', '\xF', '\x3', '\xF', '\x3', 
		'\xF', '\x3', '\xF', '\x3', '\xF', '\x3', '\xF', '\x3', '\x10', '\x3', 
		'\x10', '\x3', '\x10', '\x3', '\x10', '\x3', '\x10', '\x3', '\x10', '\x3', 
		'\x10', '\x3', '\x10', '\x3', '\x10', '\x3', '\x10', '\x3', '\x10', '\x3', 
		'\x10', '\x3', '\x10', '\x3', '\x11', '\x6', '\x11', '\x90', '\n', '\x11', 
		'\r', '\x11', '\xE', '\x11', '\x91', '\x3', '\x11', '\x3', '\x11', '\x2', 
		'\x2', '\x12', '\x3', '\x3', '\x5', '\x4', '\a', '\x5', '\t', '\x6', '\v', 
		'\a', '\r', '\b', '\xF', '\t', '\x11', '\n', '\x13', '\v', '\x15', '\f', 
		'\x17', '\r', '\x19', '\xE', '\x1B', '\xF', '\x1D', '\x10', '\x1F', '\x11', 
		'!', '\x12', '\x3', '\x2', '\x16', '\x4', '\x2', '>', '>', '@', '@', '\x4', 
		'\x2', '\x43', '\\', '\x63', '|', '\x3', '\x2', '\x32', ';', '\x5', '\x2', 
		'\x32', ';', '\x43', 'H', '\x63', 'h', '\x4', '\x2', 'Y', 'Y', 'y', 'y', 
		'\x4', '\x2', 'G', 'G', 'g', 'g', '\x4', '\x2', '\x44', '\x44', '\x64', 
		'\x64', '\x4', '\x2', 'U', 'U', 'u', 'u', '\x4', '\x2', 'Q', 'Q', 'q', 
		'q', '\x4', '\x2', '\x45', '\x45', '\x65', '\x65', '\x4', '\x2', 'M', 
		'M', 'm', 'm', '\x4', '\x2', 'V', 'V', 'v', 'v', '\x4', '\x2', 'N', 'N', 
		'n', 'n', '\x4', '\x2', 'I', 'I', 'i', 'i', '\x4', '\x2', 'R', 'R', 'r', 
		'r', '\x4', '\x2', 'W', 'W', 'w', 'w', '\x4', '\x2', 'K', 'K', 'k', 'k', 
		'\x4', '\x2', 'J', 'J', 'j', 'j', '\x4', '\x2', 'T', 'T', 't', 't', '\x5', 
		'\x2', '\v', '\f', '\xF', '\xF', '\"', '\"', '\x2', '\xA0', '\x2', '\x3', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\x5', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\a', '\x3', '\x2', '\x2', '\x2', '\x2', '\t', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\v', '\x3', '\x2', '\x2', '\x2', '\x2', '\r', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\xF', '\x3', '\x2', '\x2', '\x2', '\x2', '\x11', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\x13', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\x15', '\x3', '\x2', '\x2', '\x2', '\x2', '\x17', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\x19', '\x3', '\x2', '\x2', '\x2', '\x2', '\x1B', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\x1D', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\x1F', '\x3', '\x2', '\x2', '\x2', '\x2', '!', '\x3', '\x2', '\x2', 
		'\x2', '\x3', '\'', '\x3', '\x2', '\x2', '\x2', '\x5', '+', '\x3', '\x2', 
		'\x2', '\x2', '\a', '\x36', '\x3', '\x2', '\x2', '\x2', '\t', '\x38', 
		'\x3', '\x2', '\x2', '\x2', '\v', '?', '\x3', '\x2', '\x2', '\x2', '\r', 
		'\x45', '\x3', '\x2', '\x2', '\x2', '\xF', 'K', '\x3', '\x2', '\x2', '\x2', 
		'\x11', 'S', '\x3', '\x2', '\x2', '\x2', '\x13', 'W', '\x3', '\x2', '\x2', 
		'\x2', '\x15', 'Z', '\x3', '\x2', '\x2', '\x2', '\x17', '\x64', '\x3', 
		'\x2', '\x2', '\x2', '\x19', 'i', '\x3', '\x2', '\x2', '\x2', '\x1B', 
		'm', '\x3', '\x2', '\x2', '\x2', '\x1D', 'v', '\x3', '\x2', '\x2', '\x2', 
		'\x1F', '\x81', '\x3', '\x2', '\x2', '\x2', '!', '\x8F', '\x3', '\x2', 
		'\x2', '\x2', '#', '(', '\x5', '\t', '\x5', '\x2', '$', '(', '\x5', '\v', 
		'\x6', '\x2', '%', '(', '\x5', '\r', '\a', '\x2', '&', '(', '\x5', '\xF', 
		'\b', '\x2', '\'', '#', '\x3', '\x2', '\x2', '\x2', '\'', '$', '\x3', 
		'\x2', '\x2', '\x2', '\'', '%', '\x3', '\x2', '\x2', '\x2', '\'', '&', 
		'\x3', '\x2', '\x2', '\x2', '(', '\x4', '\x3', '\x2', '\x2', '\x2', ')', 
		',', '\x5', '\x11', '\t', '\x2', '*', ',', '\x5', '\x13', '\n', '\x2', 
		'+', ')', '\x3', '\x2', '\x2', '\x2', '+', '*', '\x3', '\x2', '\x2', '\x2', 
		',', '\x6', '\x3', '\x2', '\x2', '\x2', '-', '.', '\a', '?', '\x2', '\x2', 
		'.', '\x37', '\a', '?', '\x2', '\x2', '/', '\x30', '\a', '#', '\x2', '\x2', 
		'\x30', '\x37', '\a', '?', '\x2', '\x2', '\x31', '\x37', '\t', '\x2', 
		'\x2', '\x2', '\x32', '\x33', '\a', '>', '\x2', '\x2', '\x33', '\x37', 
		'\a', '?', '\x2', '\x2', '\x34', '\x35', '\a', '@', '\x2', '\x2', '\x35', 
		'\x37', '\a', '?', '\x2', '\x2', '\x36', '-', '\x3', '\x2', '\x2', '\x2', 
		'\x36', '/', '\x3', '\x2', '\x2', '\x2', '\x36', '\x31', '\x3', '\x2', 
		'\x2', '\x2', '\x36', '\x32', '\x3', '\x2', '\x2', '\x2', '\x36', '\x34', 
		'\x3', '\x2', '\x2', '\x2', '\x37', '\b', '\x3', '\x2', '\x2', '\x2', 
		'\x38', '\x39', '\a', 'U', '\x2', '\x2', '\x39', ':', '\a', 'Q', '\x2', 
		'\x2', ':', ';', '\a', 'W', '\x2', '\x2', ';', '<', '\a', 'T', '\x2', 
		'\x2', '<', '=', '\a', '\x45', '\x2', '\x2', '=', '>', '\a', 'G', '\x2', 
		'\x2', '>', '\n', '\x3', '\x2', '\x2', '\x2', '?', '@', '\a', 'Y', '\x2', 
		'\x2', '@', '\x41', '\a', '\x43', '\x2', '\x2', '\x41', '\x42', '\a', 
		'V', '\x2', '\x2', '\x42', '\x43', '\a', '\x45', '\x2', '\x2', '\x43', 
		'\x44', '\a', 'J', '\x2', '\x2', '\x44', '\f', '\x3', '\x2', '\x2', '\x2', 
		'\x45', '\x46', '\a', 'Y', '\x2', '\x2', '\x46', 'G', '\a', 'J', '\x2', 
		'\x2', 'G', 'H', '\a', 'G', '\x2', '\x2', 'H', 'I', '\a', 'T', '\x2', 
		'\x2', 'I', 'J', '\a', 'G', '\x2', '\x2', 'J', '\xE', '\x3', '\x2', '\x2', 
		'\x2', 'K', 'L', '\a', 'R', '\x2', '\x2', 'L', 'M', '\a', 'W', '\x2', 
		'\x2', 'M', 'N', '\a', '\x44', '\x2', '\x2', 'N', 'O', '\a', 'N', '\x2', 
		'\x2', 'O', 'P', '\a', 'K', '\x2', '\x2', 'P', 'Q', '\a', 'U', '\x2', 
		'\x2', 'Q', 'R', '\a', 'J', '\x2', '\x2', 'R', '\x10', '\x3', '\x2', '\x2', 
		'\x2', 'S', 'T', '\a', '\x43', '\x2', '\x2', 'T', 'U', '\a', 'P', '\x2', 
		'\x2', 'U', 'V', '\a', '\x46', '\x2', '\x2', 'V', '\x12', '\x3', '\x2', 
		'\x2', '\x2', 'W', 'X', '\a', 'Q', '\x2', '\x2', 'X', 'Y', '\a', 'T', 
		'\x2', '\x2', 'Y', '\x14', '\x3', '\x2', '\x2', '\x2', 'Z', '[', '\a', 
		'\x45', '\x2', '\x2', '[', '\\', '\a', 'Q', '\x2', '\x2', '\\', ']', '\a', 
		'P', '\x2', '\x2', ']', '^', '\a', 'V', '\x2', '\x2', '^', '_', '\a', 
		'\x43', '\x2', '\x2', '_', '`', '\a', 'K', '\x2', '\x2', '`', '\x61', 
		'\a', 'P', '\x2', '\x2', '\x61', '\x62', '\a', 'U', '\x2', '\x2', '\x62', 
		'\x16', '\x3', '\x2', '\x2', '\x2', '\x63', '\x65', '\t', '\x3', '\x2', 
		'\x2', '\x64', '\x63', '\x3', '\x2', '\x2', '\x2', '\x65', '\x66', '\x3', 
		'\x2', '\x2', '\x2', '\x66', '\x64', '\x3', '\x2', '\x2', '\x2', '\x66', 
		'g', '\x3', '\x2', '\x2', '\x2', 'g', '\x18', '\x3', '\x2', '\x2', '\x2', 
		'h', 'j', '\t', '\x4', '\x2', '\x2', 'i', 'h', '\x3', '\x2', '\x2', '\x2', 
		'j', 'k', '\x3', '\x2', '\x2', '\x2', 'k', 'i', '\x3', '\x2', '\x2', '\x2', 
		'k', 'l', '\x3', '\x2', '\x2', '\x2', 'l', '\x1A', '\x3', '\x2', '\x2', 
		'\x2', 'm', 'n', '\a', '\x32', '\x2', '\x2', 'n', 'o', '\a', 'z', '\x2', 
		'\x2', 'o', 's', '\x3', '\x2', '\x2', '\x2', 'p', 'r', '\t', '\x5', '\x2', 
		'\x2', 'q', 'p', '\x3', '\x2', '\x2', '\x2', 'r', 'u', '\x3', '\x2', '\x2', 
		'\x2', 's', 'q', '\x3', '\x2', '\x2', '\x2', 's', 't', '\x3', '\x2', '\x2', 
		'\x2', 't', '\x1C', '\x3', '\x2', '\x2', '\x2', 'u', 's', '\x3', '\x2', 
		'\x2', '\x2', 'v', 'w', '\t', '\x6', '\x2', '\x2', 'w', 'x', '\t', '\a', 
		'\x2', '\x2', 'x', 'y', '\t', '\b', '\x2', '\x2', 'y', 'z', '\t', '\t', 
		'\x2', '\x2', 'z', '{', '\t', '\n', '\x2', '\x2', '{', '|', '\t', '\v', 
		'\x2', '\x2', '|', '}', '\t', '\f', '\x2', '\x2', '}', '~', '\t', '\a', 
		'\x2', '\x2', '~', '\x7F', '\t', '\r', '\x2', '\x2', '\x7F', '\x80', '\t', 
		'\t', '\x2', '\x2', '\x80', '\x1E', '\x3', '\x2', '\x2', '\x2', '\x81', 
		'\x82', '\t', '\xE', '\x2', '\x2', '\x82', '\x83', '\t', '\n', '\x2', 
		'\x2', '\x83', '\x84', '\t', '\xF', '\x2', '\x2', '\x84', '\x85', '\t', 
		'\x10', '\x2', '\x2', '\x85', '\x86', '\t', '\x11', '\x2', '\x2', '\x86', 
		'\x87', '\t', '\b', '\x2', '\x2', '\x87', '\x88', '\t', '\xE', '\x2', 
		'\x2', '\x88', '\x89', '\t', '\x12', '\x2', '\x2', '\x89', '\x8A', '\t', 
		'\t', '\x2', '\x2', '\x8A', '\x8B', '\t', '\x13', '\x2', '\x2', '\x8B', 
		'\x8C', '\t', '\a', '\x2', '\x2', '\x8C', '\x8D', '\t', '\x14', '\x2', 
		'\x2', '\x8D', ' ', '\x3', '\x2', '\x2', '\x2', '\x8E', '\x90', '\t', 
		'\x15', '\x2', '\x2', '\x8F', '\x8E', '\x3', '\x2', '\x2', '\x2', '\x90', 
		'\x91', '\x3', '\x2', '\x2', '\x2', '\x91', '\x8F', '\x3', '\x2', '\x2', 
		'\x2', '\x91', '\x92', '\x3', '\x2', '\x2', '\x2', '\x92', '\x93', '\x3', 
		'\x2', '\x2', '\x2', '\x93', '\x94', '\b', '\x11', '\x2', '\x2', '\x94', 
		'\"', '\x3', '\x2', '\x2', '\x2', '\n', '\x2', '\'', '+', '\x36', '\x66', 
		'k', 's', '\x91', '\x3', '\b', '\x2', '\x2',
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
